#include <iostream>
#include <list>
#include <queue>

using namespace std;

void BFS(list<int> tab[], int n, int m, int s, int &licznik)
{
    int color[n] = {0};
    int d[n] = {0};
    int pi[n] = {0};
    int u;
    queue<int> Q;
    list<int>::iterator j;

    color[s] = 1;
    d[s] = 0;
    pi[s] = 0;
    Q.push(s);

    while(!Q.empty())
    {
        u = Q.front();
        licznik++;
        Q.pop();

        for(j = tab[u].begin(); j != tab[u].end(); j++)
        {
            if(color[*j] == 0)
            {
                color[*j] = 1;
                d[*j] = d[u] + 1;
                pi[*j] = u;
                Q.push(*j);
            }
        }
        color[u] = 2;
    }
}

int main()
{
    int n, m, v1, v2;
    int licznik = 0;

    cin >> n >> m;
    n += 1;
    m += 1;

    list<int> tab[n];

    for(int i = 1; i < m; i++)
    {
        cin >> v1 >> v2;
        tab[v1].push_back(v2);
        tab[v2].push_back(v1);
    }

    BFS(tab, n, m, 1, licznik);

    if(licznik == n-1)
    {
        cout << "graf jest spojny";
    }
    else cout << "graf jest niespojny";
}
